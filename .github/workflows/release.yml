name: Create Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x
      - name: Build Iact-Check-Webapp
        run: |
          cd iact-check-webapp/src/main/resources/webapp
          npm install -g @angular/cli
          npm install
          ng build --prod
          rm -r node_modules
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build and Test with Maven
        run: mvn -B clean verify -DskipTests
      - name: Rename artifacts
        run: |
          mv iact-check-core/target/iact-check-core*.jar iact-check-core/target/iact-check-core.jar
          mv iact-check-webapp/target/iact-check-webapp*.jar iact-check-webapp/target/iact-check-webapp.jar
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Iact-Check-Core.jar
        id: upload-iact-check-core
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./iact-check-core/target/iact-check-core.jar
          asset_name: iact-check-core.jar
          asset_content_type: application/java-archive
      - name: Upload Iact-Check-Webapp.jar
        id: upload-iact-check-webapp
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./iact-check-webapp/target/iact-check-webapp.jar
          asset_name: iact-check-webapp.jar
          asset_content_type: application/java-archive
      - name: Stop and Delete Services
        uses: cross-the-world/ssh-pipeline@master
        with:
          host: ${{ secrets.PROD_SERVER_URL }}
          user: ${{ secrets.SSH_USERNAME }}
          pass: ${{ secrets.SSH_PASSWORD }}
          port: 22022
          connect_timeout: 10s
          script: |
            sudo systemctl stop iact-check-core.service
            sudo systemctl stop iact-check-webapp.service
            sudo rm /var/www/iact-check-core/iact-check-core.jar
            sudo rm /var/www/iact-check-webapp/iact-check-webapp.jar
      - name: Deploy Core to Prod
        uses: garygrossgarten/github-action-scp@release
        with:
          local: iact-check-core/target/iact-check-core.jar
          remote: /var/www/iact-check-core/iact-check-core.jar
          port: 22022
          host: ${{ secrets.PROD_SERVER_URL }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
      - name: Deploy Core to Prod
        uses: garygrossgarten/github-action-scp@release
        with:
          local: iact-check-webapp/target/iact-check-webapp.jar
          remote: /var/www/iact-check-webapp/iact-check-webapp.jar
          port: 22022
          host: ${{ secrets.PROD_SERVER_URL }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
      - name: Start Services
        uses: cross-the-world/ssh-pipeline@master
        with:
          host: ${{ secrets.PROD_SERVER_URL }}
          user: ${{ secrets.SSH_USERNAME }}
          pass: ${{ secrets.SSH_PASSWORD }}
          port: 22022
          connect_timeout: 10s
          script: |
            sudo systemctl start iact-check-core.service
            sudo systemctl start iact-check-webapp.service
